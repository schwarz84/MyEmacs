* Seteo de tema
  #+BEGIN_SRC emacs-lisp
   ;;; keys_and_functions.el --- Archivo de carga de atajos de teclados personalizados -*- lexical-binding: t -*-

   ;; Autor: Carlos Schwarz
   ;; Mantenimiento: Carlos Schwarz
   ;; Versión: 0.1
   
   ;; Este archivo no forma parte del proyecto Emacs
   
   ;; Este archivo es software libre; puedes redistribuirlo y/o modificarlo
   ;; bajo los términos de la GNU General Public License como está publicado en
   ;; la Free Software Foundation
   
   ;; Este programa se distribuye con la esperanza de que sea de utilidad,
   ;; pero SIN NINGUNA GARANTÍA; sin siquiera la garantía implícita de
   ;; COMERCIABILIDAD o APTITUD PARA UN PROPÓSITO EN PARTICULAR. Ver la
   ;; GNU General Public License para más detalles.
   
   ;; Para una copia completa de la GNU General Public License
   ;; ir a <http://www.gnu.org/licenses/>.
   
   ;;; Commentary:
   
   ;; Este archivo contiene mis configuraciones de atajos de teclado personalizados.
   
   ;;; Code:
   
   ;; Configurar el undo normal
   (global-set-key (kbd "C-z") 'undo)
   ;; Copiar 
   (global-set-key (kbd "C-c c") 'clipboard-kill-ring-save)
   ;; Cortar
   (global-set-key (kbd "C-c x") 'clipboard-kill-region)
   ;; Pegar
   (global-set-key (kbd "C-c v") 'clipboard-yank) 
   ;; Seleccionar el área o función y trabajarla en un contenedor
   (global-set-key (kbd "C-x n n") 'narrow-or-widen-dwim)
   
   ;; Pasar a scratch
   (global-set-key (kbd "C-0") 'cambia-a-búfer-para-notas)
   (defun cambia-a-búfer-para-notas ()
     "Va al búfer *scratch*"
     (interactive)
     (switch-to-buffer "*scratch*"))
   
   ;; Volver al buffer anterior donde estaba trabajando
   (global-set-key (kbd "C-1") 'cambia-al-búfer-anterior)
   (defun cambia-al-búfer-anterior ()
     "Vuelve al último búfer en el que se estaba trabajando antes de cambiar de búfer"
     (interactive) 
     (switch-to-buffer (other-buffer)))
   
   ;; Función para que se iluminen los pares de paréntesis cuando estoy dentro de ellos
   (define-advice show-paren-function (:around (fn) fix)
     "Highlight enclosing parens."
     (cond ((looking-at "\\s(")(funcall fn))
           (t (save-excursion
                (ignore-errors (backward-up-list))
                (funcall fn)))))
   
   ;; (define-key mc/keymap (kbd "<return>") nil)
   (global-unset-key (kbd "M-<down-mouse-1>"))
   (global-set-key (kbd "M-<mouse-1>") 'mc/add-cursor-on-click)
   
   ;; Bookmark
   (global-set-key (kbd "C-/") 'bookmark-set)
   
   (provide 'keys)
   ;;; keys_and_functions.el ends here
   
  #+END_SRC
